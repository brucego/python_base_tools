# every tx is a functioin,and Tx use a case of Timer and use T1.timeit(max N) to run tx function N times and return time

from timeit import Timer

# use logging return result
import logging as log
logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s -%(message)s')

def t1():
    df3=pd.DataFrame(np.arange(16).reshape((4,4)),index=['a','b','c','d'],columns=['one','two','three','four']) 
    for i in range(100):
        df3.loc[i] = ['a','a','a','a']
T1 = Timer("t1()", "from __main__ import t1")
print("loc:", T1.timeit(10))
def t2():
    df3=pd.DataFrame(np.arange(16).reshape((4,4)),index=['a','b','c','d'],columns=['one','two','three','four']) 
    for i in range(100):
        df_new = pd.DataFrame({'one':'a','two':'a','three':'a', 'four':'a'},index=[i])
        df3 = pd.concat([df3,df_new],ignore_index=True)
T2 = Timer("t2()", "from __main__ import t2")
print("concat:", T2.timeit(10))

def t3():
    df3=pd.DataFrame(np.arange(16).reshape((4,4)),index=['a','b','c','d'],columns=['one','two','three','four']) 
    for i in range(100):
        df_new = pd.DataFrame({'one':'a','two':'a','three':'a', 'four':'a'},index=[i])
        df3 = df3.append( df_new,ignore_index=True)
T3 = Timer("t3()", "from __main__ import t3")
print("append:", T3.timeit(10))
